@using Microsoft.AspNetCore.Components.Forms
@inject CategoryService CategoryService

<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
    <div class="bg-white rounded-2xl shadow-2xl w-full max-w-xl mx-4 md:mx-0 p-8 relative">
        <button class="absolute top-4 right-4 text-gray-500 hover:text-red-600 transition" @onclick="OnCancelClicked" title="Close">
            <i class="fa-solid fa-xmark text-2xl"></i>
        </button>

        <h2 class="text-2xl font-bold text-gray-800 mb-6 flex items-center gap-2">
            <i class="fa-solid fa-plus text-[#66c61c]"></i>
            Add New Category
        </h2>

        <EditForm Model="@NewCategory" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-4">
                <label class="block font-medium mb-1 text-gray-700">Name</label>
                <InputText class="border border-gray-300 rounded-lg px-4 py-2 w-full focus:outline-none focus:ring-2 focus:ring-[#66c61c]" @bind-Value="NewCategory.Name" />
            </div>

            <div class="mb-6">
                <label class="block font-medium mb-1 text-gray-700">Icon Class <span class="text-sm text-gray-400">(e.g., fa-solid fa-box)</span></label>
                <InputText class="border border-gray-300 rounded-lg px-4 py-2 w-full focus:outline-none focus:ring-2 focus:ring-[#66c61c]" @bind-Value="NewCategory.IconClass" />
            </div>

            <div class="flex justify-end gap-3">
                <button type="submit" class="bg-[#66c61c] text-white px-5 py-2.5 rounded-lg font-semibold hover:bg-[#57a81a] transition">
                    <i class="fa-solid fa-check mr-2"></i> Create
                </button>
                <button type="button" class="bg-gray-200 text-gray-800 px-5 py-2.5 rounded-lg font-medium hover:bg-gray-300 transition" @onclick="OnCancelClicked">
                    <i class="fa-solid fa-xmark mr-2"></i> Cancel
                </button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    [Parameter] public EventCallback<Category> OnCreated { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    private Category NewCategory { get; set; } = new();

    private async Task HandleValidSubmit()
    {
        if (OnCreated.HasDelegate)
        {
            await OnCreated.InvokeAsync(NewCategory);
            ResetForm();
        }
    }

    private async Task OnCancelClicked()
    {
        await OnCancel.InvokeAsync();
    }

    public void ResetForm()
    {
        NewCategory = new Category();
    }
}
