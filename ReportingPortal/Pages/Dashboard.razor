@page "/dashboard"
@attribute [Authorize(Roles = "Admin")]

@using Microsoft.AspNetCore.Authorization
@using Models.front
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject UserService UserService
@inject ReportService ReportService

<div class="p-6 space-y-6 bg-gray-100 min-h-screen">
    <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-4">
        <h1 class="text-3xl font-bold text-gray-800">Dashboard</h1>
    </div>

    <div class="bg-white p-4 rounded-lg shadow flex flex-wrap gap-4 items-end justify-between">
        <div>
            <label class="text-sm font-medium text-gray-600 block">Category</label>
            <select @bind="selectedCategory"
                class="w-40 mt-1 border-gray-300 rounded-md text-sm focus:ring-green-500 focus:border-green-500">
                @foreach (var cat in categories)
                {
                    <option>@cat</option>
                }
            </select>
        </div>

        <div>
            <label class="text-sm font-medium text-gray-600 block">District</label>
            <select @bind="selectedDistrict"
                class="w-40 mt-1 border-gray-300 rounded-md text-sm focus:ring-green-500 focus:border-green-500">
                @foreach (var dist in districts)
                {
                    <option>@dist</option>
                }
            </select>
        </div>

        <div>
            <label class="text-sm font-medium text-gray-600 block">Status</label>
            <select @bind="selectedStatus"
                class="w-40 mt-1 border-gray-300 rounded-md text-sm focus:ring-green-500 focus:border-green-500">
                @foreach (var stat in statuses)
                {
                    <option>@stat</option>
                }
            </select>
        </div>

        <button @onclick="ApplyFiltersAsync"
                class="px-4 py-2 bg-green-500 hover:bg-green-600 text-white rounded-full text-sm flex items-center gap-2">
            <i class="fa-solid fa-filter"></i>
            Apply Filters
        </button>
    </div>

    <div class="relative bg-white rounded-lg shadow h-[50vh]" id="map">
        <NavLink href="/map"
                 class="map-link">
            <i class="fa-solid fa-expand"></i>
        </NavLink>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div class="bg-white rounded-lg shadow p-4">
            <h2 class="text-lg font-semibold text-gray-800 mb-4">Latest Reports</h2>

            @if (reports.Count > 0)
            {
               <table class="w-full text-sm text-gray-700 hidden sm:table">
                    @foreach (var report in reports.Take(5))
                    {
                        <tr class="border-b hover:bg-gray-50 transition">
                            <td class="py-4 align-top">
                                <div class="space-y-3">
                                    <div class="flex justify-between">
                                        <div>
                                            <div class="flex items-center gap-2">
                                                <span class="font-semibold text-gray-800">Type:</span>
                                                <i class="@report.Category?.IconClass text-xl text-green-600"></i>
                                                <span class="text-gray-900 font-medium">@report.Category?.Name</span>
                                            </div>
                                        </div>
                                        <div class="text-right">
                                            <span class="font-semibold text-gray-800">Date:</span>
                                            <span class="ml-1 text-gray-600">@report.CreatedAt.ToString("yyyy-MM-dd")</span>
                                        </div>
                                    </div>

                                    <div class="flex justify-between items-start">
                                        <div class="max-w-[150px] truncate overflow-hidden whitespace-nowrap">
                                            <span class="font-semibold text-gray-800">Location:</span>
                                            <span class="ml-1 text-gray-600 cursor-pointer hover:underline" title="@report.Location"
                                                  @onclick="@(() => CopyToClipboard(report.Location))">
                                                @report.Location
                                            </span>
                                        </div>
                                        <div class="text-right">
                                            <span class="font-semibold text-gray-800">Status:</span>
                                            <span class="ml-1 px-2 py-0.5 rounded-full text-xs font-semibold @GetStatusBadgeClass(report.Status)">
                                                @report.Status
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </td>
                            <td class="py-4 text-center align-middle pl-3">
                                <button class="text-green-500 hover:text-green-700" title="View Report"
                                        @onclick="@(() => GoToReportDetail(report.Id))">
                                    <i class="fa-solid fa-right-to-bracket text-lg"></i>
                                </button>
                            </td>
                        </tr>
                    }
               </table>

                <div class="sm:hidden space-y-4">
                    @foreach (var report in reports.Take(5))
                    {
                        <div class="border rounded-lg p-4 shadow-sm hover:shadow-md transition">
                            <div class="flex items-center gap-2 mb-2">
                                <i class="@report.Category?.IconClass text-xl text-green-600"></i>
                                <span class="font-semibold text-gray-800">@report.Category?.Name</span>
                                <span class="ml-auto text-gray-600 text-xs">@report.CreatedAt.ToString("yyyy-MM-dd")</span>
                            </div>

                            <div class="mb-2">
                                <span class="font-semibold text-gray-800">Location:</span>
                                <p class="text-gray-600 truncate cursor-pointer hover:underline" title="@report.Location"
                                   @onclick="@(() => CopyToClipboard(report.Location))">
                                    @report.Location
                                </p>
                            </div>

                            <div class="flex justify-between items-center">
                                <span class="font-semibold text-gray-800">Status:</span>
                                <span class="ml-1 px-2 py-0.5 rounded-full text-xs font-semibold @GetStatusBadgeClass(report.Status)">
                                    @report.Status
                                </span>
                            </div>

                            <button class="mt-3 text-green-500 hover:text-green-700 w-full text-center"
                                    @onclick="@(() => GoToReportDetail(report.Id))" aria-label="View Report">
                                <i class="fa-solid fa-right-to-bracket text-lg"></i> View Details
                            </button>
                        </div>
                    }
                </div>

                <p class="text-xs text-gray-500 mt-2">Showing @Math.Min(5, reports.Count) of @reports.Count</p>
                <div class="text-right mt-2">
                    <NavLink href="/dashboard/reports" class="text-green-500 text-sm font-medium hover:underline">View all
                    </NavLink>
                </div>
            }
            else
            {
                <p class="text-gray-500 text-sm text-center py-8">No reports available</p>
            }
        </div>

        <div class="bg-white rounded-lg shadow p-4">
            <h2 class="text-lg font-semibold text-gray-800 mb-4">Latest Users</h2>

           @if (users.Count > 0)
            {
                <table class="w-full text-sm text-gray-700 hidden sm:table">
                    @foreach (var user in users.Take(5))
                    {
                        <tr class="border-b">
                            <td class="py-4 align-top">
                                <div class="space-y-2">
                                    <div class="grid grid-cols-2 text-sm">
                                        <div>
                                            <span class="font-semibold text-gray-900">Name:</span>
                                            <span class="ml-1 text-gray-600">@user.Name</span>
                                        </div>
                                        <div class="text-right">
                                            <span class="font-semibold text-gray-900">Surname:</span>
                                            <span class="ml-1 text-gray-600">@user.Surname</span>
                                        </div>
                                    </div>
                                    <div class="grid grid-cols-2 text-sm">
                                        <div>
                                            <span class="font-semibold text-gray-900">Email:</span>
                                            <span class="ml-1 text-gray-600">@user.Email</span>
                                        </div>
                                        <div class="text-right">
                                            <span class="font-semibold text-gray-900">Role:</span>
                                            <span class="ml-1 px-2 py-0.5 rounded-full text-xs font-semibold text-white bg-green-500">
                                                @user.Role
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </table>

                <div class="sm:hidden space-y-4">
                    @foreach (var user in users.Take(5))
                    {
                        <div class="border rounded-lg p-4 shadow-sm hover:shadow-md transition">
                            <div class="mb-2">
                                <span class="font-semibold text-gray-900">Name:</span>
                                <span class="ml-1 text-gray-600">@user.Name</span>
                            </div>
                            <div class="mb-2">
                                <span class="font-semibold text-gray-900">Surname:</span>
                                <span class="ml-1 text-gray-600">@user.Surname</span>
                            </div>
                            <div class="mb-2">
                                <span class="font-semibold text-gray-900">Email:</span>
                                <span class="ml-1 text-gray-600 break-all">@user.Email</span>
                            </div>
                            <div>
                                <span class="font-semibold text-gray-900">Role:</span>
                                <span class="ml-1 px-2 py-0.5 rounded-full text-xs font-semibold text-white bg-green-500">
                                    @user.Role
                                </span>
                            </div>
                        </div>
                    }
                </div>

                <p class="text-xs text-gray-500 mt-2">Showing @Math.Min(5, users.Count) of @users.Count</p>
                <div class="text-right mt-2">
                    <NavLink href="/dashboard/users" class="text-green-500 text-sm font-medium hover:underline">View all</NavLink>
                </div>
            }
            else
            {
                <p class="text-gray-500 text-sm text-center py-8">No users available</p>
            }

        </div>
    </div>
</div>

@code {
    private string selectedCategory = "All";
    private string selectedDistrict = "All";
    private string selectedStatus = "All";

    private List<string> categories = new() { "All", "Incendio", "Furto", "Inondazione" };
    private List<string> districts = new() { "All", "Centro", "San Paolo", "Navigli", "Isola" };
    private List<string> statuses = Enum.GetNames(typeof(ReportStatusEnum)).Prepend("All").ToList();

    private List<ReportDto> reports = new();
    private List<User> users = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("MAP.initMap");

            await ApplyFiltersAsync();

            await FetchUsersAsync();
            StateHasChanged();
        }
    }

    private async Task FetchUsersAsync()
    {
        var response = await UserService.GetAllAsync(new UsersPaginatedRequest
        {
            Page = 1,
            PageSize = 5
        });

        users = response.Items ?? new();
    }

    private async Task ApplyFiltersAsync()
    {
        Console.WriteLine($"Filter applied: Category={selectedCategory}, District={selectedDistrict}, Status={selectedStatus}");

        var request = new ReportsPaginatedRequest
        {
            Page = 1,
            PageSize = 5,
            Search = "",
            Status = selectedStatus != "All"
                ? Enum.TryParse<ReportStatusEnum>(selectedStatus, out var statusEnum)
                    ? statusEnum
                    : null
                : null
        };

        var response = await ReportService.GetAllAsync(request);
        reports = response.Items ?? new();
        StateHasChanged();
    }


    private void GoToReportDetail(int reportId)
    {
        NavigationManager.NavigateTo($"/report/{reportId}");
    }

    private string GetStatusBadgeClass(ReportStatusEnum status)
    {
        return status switch
        {
            ReportStatusEnum.Resolved => "bg-green-100 text-green-700",
            ReportStatusEnum.Pending => "bg-yellow-100 text-yellow-700",
            ReportStatusEnum.Rejected => "bg-red-100 text-red-700",
            _ => "bg-gray-100 text-gray-700"
        };
    }

    private async Task CopyToClipboard(string text)
    {
        await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", text);
    }
}
