@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Forms
@using Models.front

<div class="w-full max-w-md p-8 space-y-6 bg-white rounded-xl shadow-md mx-auto mt-12">
    <div class="flex justify-center">
        <div class="bg-green-500 rounded-full p-2 shadow-md">
            <img src="/logo.png" alt="Fixaroo Logo" class="w-20 h-20" />
        </div>
    </div>

    <h2 class="text-center text-xl font-semibold text-gray-900">
        Enter your credentials to login.
    </h2>

    <EditForm Model="@loginModel" OnValidSubmit="OnSubmit">
        <DataAnnotationsValidator />
        <div class="space-y-4">
            <InputText @bind-Value="loginModel.Email"
                       class="w-full px-4 py-3 rounded-lg border border-gray-300 placeholder-gray-400 text-sm focus:outline-none focus:ring-2 focus:ring-green-400"
                       type="email" placeholder="Email" />
            <ValidationMessage For="@(() => loginModel.Email)" />

            <InputText @bind-Value="loginModel.Password"
                       class="w-full px-4 py-3 rounded-lg border border-gray-300 placeholder-gray-400 text-sm focus:outline-none focus:ring-2 focus:ring-green-400"
                       type="password" placeholder="Password" />
            <ValidationMessage For="@(() => loginModel.Password)" />

            <button class="w-full py-3 rounded-lg bg-green-500 hover:bg-green-600 text-white font-semibold transition duration-300">
                Login
            </button>
        </div>
    </EditForm>

    <p class="text-center text-sm text-gray-500">
        Proceeding means you’re ok with our
        <a href="/terms" class="text-green-600 font-semibold hover:underline">terms & conditions</a>
    </p>
</div>

@code {
    private LoginFormModel loginModel = new();
    private bool showToast = true;

    [Parameter]
    public EventCallback<LoginFormModel> OnLogin { get; set; }

    private async Task OnSubmit()
    {
        if (OnLogin.HasDelegate)
        {
            await OnLogin.InvokeAsync(loginModel);
        }
    }
}
