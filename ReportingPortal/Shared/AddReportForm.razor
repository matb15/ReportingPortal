<div class="w-full mx-auto bg-white p-6">
    <h2 class="text-xl font-semibold text-gray-800 mb-6">Add Report</h2>

    <div>
        <p class="font-medium text-gray-800 mb-2">What are you reporting?</p>
        <div class="grid grid-cols-2 sm:grid-cols-3 gap-3 mb-2">
            @foreach (var type in ReportTypes)
            {
                <button class="border rounded-lg px-4 py-3 text-center text-sm font-medium
                               flex flex-col items-center gap-1 transition duration-150 ease-in-out
                               @(SelectedType == type ? "bg-gray-800 text-white" : "text-gray-800 bg-gray-100 hover:bg-gray-200")"
                        @onclick="() => SelectType(type)">
                    <span class="text-2xl">⚠️</span>
                    @type
                </button>
            }
        </div>
        @if (SelectedType == "Other")
        {
            <p class="text-sm text-gray-500 mt-1">If answering ‘Other’, please provide details in the description.</p>
        }
    </div>

    <div class="mt-4">
        <label class="block text-sm font-medium text-gray-700 mb-1">Location</label>
        <input type="text" class="w-full px-3 py-2 border rounded-md focus:ring-2 focus:ring-green-500 focus:outline-none" @bind="Location" />
    </div>

    <div class="mt-4">
        <label class="block text-sm font-medium text-gray-700 mb-1">Description</label>
        <textarea rows="6" class="w-full px-3 py-2 border rounded-md focus:ring-2 focus:ring-green-500 focus:outline-none"
                  @bind="Description"></textarea>
    </div>

    <div class="mt-4">
        <label class="block text-sm font-medium text-gray-700 mb-1">Photos (optional)</label>
        <input type="file" class="w-full text-sm text-gray-700 file:border file:border-gray-300 file:rounded-md file:px-3 file:py-1 file:bg-white file:text-gray-800" />
    </div>

    <div class="mt-6 flex justify-between items-center">
        <button type="button" class="px-4 py-2 rounded-full border border-gray-300 text-green-600 hover:bg-gray-100"
                @onclick="OnCancelClicked">
            Cancel
        </button>
        <button type="submit" class="px-4 py-2 rounded-full bg-green-500 text-white hover:bg-green-600"
                disabled="@string.IsNullOrWhiteSpace(Location) || string.IsNullOrWhiteSpace(Description)"
                @onclick="OnSubmitClicked">
            Submit report
        </button>
    </div>
</div>

@code {
    [Parameter] public EventCallback OnCancel { get; set; }
    [Parameter] public EventCallback<ReportFormModel> OnSubmit { get; set; }

    private string Location = string.Empty;
    private string Description = string.Empty;
    private string SelectedType = "";
    private readonly List<string> ReportTypes = new() {
        "Dumped Rubbish", "Graffiti or Vandalism", "Pedestrian Hazard", "Traffic Hazard", "Other"
    };

    void SelectType(string type)
    {
        SelectedType = type;
    }

    async Task OnCancelClicked()
    {
        Location = "";
        Description = "";
        SelectedType = "";
        if (OnCancel.HasDelegate)
            await OnCancel.InvokeAsync(null);
    }

    async Task OnSubmitClicked()
    {
        if (OnSubmit.HasDelegate)
        {
            var model = new ReportFormModel
            {
                Location = Location,
                Description = Description,
                Type = 1
            };
            await OnSubmit.InvokeAsync(model);
        }
    }
}
