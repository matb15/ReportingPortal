@if (ShowSearch)
{
    <input @bind="CurrentSearchText" @bind:event="oninput"
        class="px-3 py-2 rounded-full border border-gray-300 focus:outline-none focus:ring-2 focus:ring-[#66c61c] transition w-48"
        placeholder="Search reports..." />
    <button class="w-10 h-10 flex items-center justify-center rounded-full bg-gray-200 hover:bg-gray-300 text-gray-600 ml-2"
        @onclick="() => HideSearch()">
        <i class="fa-solid fa-xmark"></i>
    </button>
}
else
{
    <button
        class="w-10 h-10 flex items-center justify-center rounded-full bg-[#66c61c] hover:bg-green-600 text-white shadow"
        @onclick="() => ShowSearchInput()">
        <i class="fa-solid fa-magnifying-glass"></i>
    </button>
}

@code {
    [Parameter, EditorRequired]
    public string SearchText { get; set; }

    [Parameter]
    public EventCallback<string> SearchTextChanged { get; set; }

    bool ShowSearch = false;

    string CurrentSearchText
    {
        get => SearchText;
        set
        {
            if (SearchText != value)
            {
                SearchText = value;
                SearchTextChanged.InvokeAsync(value);
            }
        }
    }

    void HideSearch() => ShowSearch = false;
    void ShowSearchInput() => ShowSearch = true;
}