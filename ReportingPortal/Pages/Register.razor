@page "/register"
@using Models.front
@using System.Text.Json

@inject NavigationManager Navigation
@inject HttpClient HttpClient
@inject AuthService authService
@inject Blazored.LocalStorage.ILocalStorageService localStorage

<div>
    <RegisterForm OnRegister="HandleRegister" />
</div>

@code {

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            string? token = await localStorage.GetItemAsync<string>("token");
            if (!string.IsNullOrEmpty(token))
            {
                var userJson = await localStorage.GetItemAsync<string>("user");
                if (!string.IsNullOrEmpty(userJson))
                {
                    var user = JsonSerializer.Deserialize<User>(userJson);
                    if (user != null)
                    {
                        if (user.Role == UserRoleEnum.Admin)
                        {
                            Navigation.NavigateTo("/dashboard");
                        }
                        else
                        {
                            Navigation.NavigateTo("/home");
                        }
                    }
                }
            }
        }
    }

    private async Task HandleRegister(RegisterFormModel model)
    {
        RegisterRequest request = new RegisterRequest
        {
            Email = model.Email,
            Password = model.Password,
            ConfirmPassword = model.ConfirmPassword,
            Name = model.Name,
            Surname = model.Surname,
        };

        try
        {
            RegisterResponse response = await authService.RegisterAsync(request);

            if (response.StatusCode >= 200 && response.StatusCode <= 299)
            {
                Console.WriteLine("Registration successful!");

                Navigation.NavigateTo("/login");
            }
            else
            {
                Console.WriteLine($"Registration failed: {response.Message} (Status: {response.StatusCode})");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Unexpected error: {ex.Message}");
        }
    }

}
